/**
 * 依赖库版本管理
 */
def versions = [:]
versions.androidx_junit = "1.1.3"
versions.androidx_espresso = "3.4.0"
versions.androidx_appcompat = "1.3.1"
versions.androidx_core = "1.6.0"
versions.androidx_recyclerview = "1.2.1"
versions.androidx_constraintlayout = "2.1.0"
versions.androidx_annotation = "1.2.0"
versions.androidx_arch_core = "2.1.0"
versions.androidx_lifecycle = "2.3.1"
versions.androidx_room = "2.3.0"
versions.androidx_work_manager = "2.5.0"
versions.androidx_activity_ktx = "1.3.1"
versions.androidx_fragment_ktx = "1.3.6"
versions.android_material = "1.4.0"
versions.kotlin_coroutines = "1.5.1"
versions.glide = "4.12.0"
versions.mmkv = "1.2.11"
versions.fastjson = "1.1.71.android"
versions.gson = "2.8.6"
versions.rxjava2 = "2.2.21"
versions.rxandroid2 = "2.1.1"
versions.okio = "2.10.0"
versions.okhttp3 = "4.9.1"
versions.retrofit2 = "2.9.0"
versions.wechat_sdk = "6.7.9"
versions.gif = "1.2.23"
versions.lottie = "4.2.1"
versions.deviceid = "1.0.9"
versions.junit = "4.13.2"
versions.leakcanary = "2.7"
versions.immersionbar = "3.0.0"
versions.swipebacklayout = "1.1.0"
versions.ptr = "1.0.11"
versions.banner = "2.2.2"
ext.versions = versions

/**
 * APP版本号、插件版本、编译相关版本管理
 */
def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 30
build_versions.compile_sdk = 30
build_versions.android_gradle_plugin = "4.2.2"
build_versions.kotlin = '1.5.30'
build_versions.app_version_code = 1000000
build_versions.app_version_name = "1.0.0"
build_versions.asm = "7.1"
ext.build_versions = build_versions

def local_properties = [:]
local_properties.APP_LOCAL_DEBUG = "APP_LOCAL_DEBUG"
local_properties.CLOSE_LEAK_CANARY = "CLOSE_LEAK_CANARY"
ext.local_properties = local_properties

/**
 * 路径常量
 */
def paths = [:]
paths.room_schema = "$projectDir/schemas"
ext.paths = paths

/**
 * 仓库地址管理
 */
def addRepos(RepositoryHandler handler) {
    handler.maven {
        allowInsecureProtocol true
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    handler.maven {
        allowInsecureProtocol true
        url 'http://maven.aliyun.com/repository/google/'
    }
    handler.maven {
        allowInsecureProtocol true
        url 'https://maven.aliyun.com/repository/jcenter/'
    }
    handler.maven {
        allowInsecureProtocol true
        url 'https://maven.aliyun.com/repository/public/'
    }
    handler.maven {
        allowInsecureProtocol true
        url 'https://jitpack.io'
    }
    handler.maven {
        allowInsecureProtocol true
        url 'https://s01.oss.sonatype.org/content/groups/public'
    }
    handler.mavenCentral()
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos

/**
 * 读取本机配置，主要用于本地差异化构建(local.properties不会提交到仓库)
 */
def readLocalProperty(String key) {
    boolean value = false
    def file = rootProject.file('local.properties')
    if (file.exists() && file.isFile()) {
        Properties properties = new Properties()
        properties.load(file.newDataInputStream())
        value = Boolean.parseBoolean(properties.getProperty(key, 'false'))
    }
    println(String.format("property key=%s value=%S", key, value))
    return value
}

ext.readLocalProperty = this.&readLocalProperty